@page "/FinalInspectionsWorkload"

@using ManufacturingManager.Core.Repositories
@using ManufacturingManager.Core
@using ManufacturingManager.Components.UI
@using ManufacturingManager.Core.Services
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage SessionStorage
@inject NavigationManager navigationManager
@inject IDataEntryRepository DataEntryRepository
@inject IJSRuntime JSRuntime

@* @inject UserLogged CurrentUser *@
@attribute [Authorize(Roles = "Administrator,User")]

<PageTitle>Final Inspection Report Viewer</PageTitle>
<div class="card border">
    <div class="card-header">
        <div class="row">
            <div class="col-6" tabindex="0">
                <h2 class="text-primary" id="startContent">Final Inspection Report Workload</h2>
            </div>
            <div class="col-6 text-right">
            </div>
        </div>

    </div>
    <br/>
    <div class="col-8" tabindex="0">
        <button class="btn btn-success mx-4 btn-lg" @onclick="() => AddNewRecord()" title="Add Final Inspection Record"
                role="button" aria-pressed="false">
            Add Record
            @*<i class="bi-pencil"></i>*@
        </button>
    </div>

    <div class="card-body">
        <LookUpTablesGrid Items="_listofFinalInspections" TItem="FinalInspection" JqueryFileName="DatatableFinalInspectionWorkload" Args="@Args" SpinningNoRecords="false" ReloadTable="true" Caption="FinalInspectionWorkload">
            <Columns>
                <LookUpTablesGridColumn Name="FinalInspectionId" Label="FinalInspection Id">
                    <div tabindex="0">
                        @context.FinalInspectionId
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="InspectorName" Label="Inspector Name">
                    <div tabindex="1">
                        @context.InspectorName
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="MidHangerClampThickness" Label="Mid Hanger Clamp Thickness">
                    <div tabindex="2">
                        @context.MidHangerClampThickness
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="RailTubeHeight" Label="Rail Tube Height">
                    <div tabindex="3">
                        @context.RailTubeHeight
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="RailTubeWidth" Label="Rail Tube Width">
                    <div tabindex="4">
                        @context.RailTubeWidth
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="TubeWeldSeamLocation" Label="Tube Weld Seam Location">
                    <div tabindex="5">
                        @context.TubeWeldSeamLocation
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="TubeLength" Label="Tube Length">
                    <div tabindex="6">
                        @context.TubeLength
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="TubeCornerRadius4Places" Label="Tube Corner Radius 4 Places">
                    <div tabindex="7">
                        @context.TubeCornerRadius4Places
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="EndOfTubeToCLDistance" Label="End of Tube to CL Distance">
                    <div tabindex="8">
                        @context.EndOfTubeToCLDistance
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="EndOfTubeToClamp1Bolt_2Places" Label="End of Tube to Clamp 1 Bolt 2 Places">
                    <div tabindex="9">
                        @context.EndOfTubeToClamp1Bolt_2Places
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="Clamp1BoltToClamp2BoltDistance_2Places" Label="Clamp 1 Bolt to Clamp 2 Bolt Distance 2 Places">
                    <div tabindex="10">
                        @context.Clamp1BoltToClamp2BoltDistance_2Places
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="EndOfTubeToClamp3Bolt_2Places" Label="End of Tube to Clamp 3 Bolt Distance 2 Places">
                    <div tabindex="11">
                        @context.EndOfTubeToClamp3Bolt_2Places
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="Clamp3BoltToClamp4BoltDistance_2Places" Label="Clamp 3 Bolt to Clamp 4 Bolt Distance 2 Places">
                    <div tabindex="12">
                        @context.Clamp3BoltToClamp4BoltDistance_2Places
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="TorqueClamp1_2Places" Label="Torque(Clamp 1) 2 Places">
                    <div tabindex="13">
                        @context.TorqueClamp1_2Places
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="TorqueClamp2_2Places" Label="Torque(Clamp 2) 2 Places">
                    <div tabindex="14">
                        @context.TorqueClamp2_2Places
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="TorqueClamp3_2Places" Label="Torque(Clamp 3) 2 Places">
                    <div tabindex="15">
                        @context.TorqueClamp3_2Places
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="TorqueClamp4_2Places" Label="Torque(Clamp 4) 2 Places">
                    <div tabindex="16">
                        @context.TorqueClamp4_2Places
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="TorqueMarking" Label="Torque Marking">
                    <div tabindex="17">
                        @context.TorqueMarkingString
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="PartMarking" Label="Part marking">
                    <div tabindex="18">
                        @context.PartMarkingString
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="RivetPresence" Label="Rivet Presence Qty=2">
                    <div tabindex="19">
                        @context.RivetPresenceString
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="MidHangerHolesAlign" Label="Mid Hanger Holes Align">
                    <div tabindex="20">
                        @context.MidHangerHolesAlignString
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="WasherPlatePresence6Locations" Label="Washer plate presence 6 locations">
                    <div tabindex="21">
                        @context.WasherPlatePresence6LocationsString
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="ColorCode" Label="Color Code">
                    <div tabindex="22">
                        @context.ColorCodeString
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="Appearance" Label="Appearance">
                    <div tabindex="23">
                        @context.AppearanceString
                    </div>
                </LookUpTablesGridColumn>
                <LookUpTablesGridColumn Name="CreatedDate" Label="Created Date">
                    <div tabindex="24">
                        @context.CreatedDate.ToString("yyyy/MM/dd HH:mm:ss")
                    </div>
                </LookUpTablesGridColumn>

                <LookUpTablesGridColumn Name="" Label="Action">
                    @{
                        var id = context.FinalInspectionId;

                        <button class="btn btn-success mx-4" @onclick="() => GetSelectedRecords(id)" title="Edit Final Inspection @context.FinalInspectionId"
                                role="button" aria-pressed="false">
                            <i class="bi-pencil"></i>
                        </button>

                        // <button class="btn btn-secondary text-white" value="" @onclick="() => ViewLog(id, context.InspectorName)" title=" View log information for Case  @context.DimensionId"
                        //         role="button" aria-pressed="false">
                        //     <i class="bi-binoculars"></i>
                        // </button>
                    }

                </LookUpTablesGridColumn>
            </Columns>
        </LookUpTablesGrid>

        @if (ShowDialogOpen)
        {
            <ViewCaseLogs Title="@LogTitle" RecordId="@RecordId" OnClose="@OnDeleteDialogClose" Args="@ArgsView"></ViewCaseLogs>
        }
    </div>
</div>
<script>
    function resetScrollPosition() {
        window.scrollTo(0, 0); // Reset the scroll position
        document.body.style.height = 'auto'; // Adjust height if needed
        document.body.style.width = 'auto';  // Adjust width if needed
    }
</script>

@code{

    public IList<FinalInspection> _listofFinalInspections = new List<FinalInspection>();
    public string? LogTitle { get; set; }
    public int RecordId { get; set; }
    private bool ShowDialogOpen { get; set; }
    private LookUpTableArgs Args { get; set; }
    public LookUpTableArgs ArgsView { get; set; }
    private IList<Decision>? _okNokList;

    protected override async Task OnInitializedAsync()
    {
        Args = new LookUpTableArgs
        {
            TableName = "FinalInspectionTable",
            FilenameToExportExcel = "FinalInspectionWorkload",
            TitleInExcelFile = "Workload for user "
        };

        _okNokList = DropDownCategories.GetDecisions();

        _listofFinalInspections = (IList<FinalInspection>)await DataEntryRepository.GetFinalInspectionsDataView();
        foreach (var finalInspection in _listofFinalInspections)
        {
            var decisionNameAppearance = _okNokList.FirstOrDefault(x => x.DecisionId == finalInspection.Appearance)
                ?.DecisionName;
            var decisionNameTorqueMarking = _okNokList.FirstOrDefault(x => x.DecisionId == finalInspection.TorqueMarking)
                ?.DecisionName;
            var decisionNamePartMarking = _okNokList.FirstOrDefault(x => x.DecisionId == finalInspection.PartMarking)
                ?.DecisionName;
            var decisionNameRivetPresence = _okNokList.FirstOrDefault(x => x.DecisionId == finalInspection.RivetPresence)
                ?.DecisionName;
            var decisionNameMidHangerHolesAlign = _okNokList.FirstOrDefault(x => x.DecisionId == finalInspection.MidHangerHolesAlign)
                ?.DecisionName;
            var decisionNameWasherPlatePresence6Locations = _okNokList.FirstOrDefault(x => x.DecisionId == finalInspection.WasherPlatePresence6Locations)
                ?.DecisionName;
            var decisionNameColorCode = _okNokList.FirstOrDefault(x => x.DecisionId == finalInspection.ColorCode)
                ?.DecisionName;
            
            finalInspection.AppearanceString = decisionNameAppearance;
            finalInspection.TorqueMarkingString = decisionNameTorqueMarking;
            finalInspection.PartMarkingString = decisionNamePartMarking;
            finalInspection.RivetPresenceString = decisionNameRivetPresence;
            finalInspection.MidHangerHolesAlignString = decisionNameMidHangerHolesAlign;
            finalInspection.WasherPlatePresence6LocationsString = decisionNameWasherPlatePresence6Locations;
            finalInspection.ColorCodeString = decisionNameColorCode;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("resetScrollPosition");
        }
    }

    protected void GetSelectedRecords(int finalInspectionId)
    {
        SessionStorage.SetAsync("FinalInspectionId", finalInspectionId);
        navigationManager.NavigateTo("/EditFinalInspection");
    }

    protected void AddNewRecord()
    {
        navigationManager.NavigateTo($"/FTCSolarConfiguration/{false}");
    }

    private async void OnDeleteDialogClose()
    {
        ShowDialogOpen = false;
        await InvokeAsync(StateHasChanged);
    }

}